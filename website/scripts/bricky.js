/* Generated by the Nim Compiler v1.6.8 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI872415606 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1107296265 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1107296264 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1107296260 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1107296262 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1107296266 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554456 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1107296263 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI486539502 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1107296261 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555124 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI671088643 = {size: 0,kind: 43,base: null,node: null,finalizer: null};
var NTI671088644 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555128 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555130 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554440 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555164 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555112 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555122 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI33555122 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555122.node = NNI33555122;
var NNI33555120 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555120.node = NNI33555120;
var NNI33555113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555113.node = NNI33555113;
NTI33555164.base = NTI33555112;
NTI33555165.base = NTI33555112;
var NNI33555112 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555164, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554440, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554439, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554439, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555165, name: "up", sons: null}]};
NTI33555112.node = NNI33555112;
var NNI33555083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555083.node = NNI33555083;
NTI33555112.base = NTI33555083;
NTI33555113.base = NTI33555112;
NTI33555120.base = NTI33555113;
NTI33555122.base = NTI33555120;
var NNI33555130 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555130.node = NNI33555130;
NTI33555130.base = NTI33555113;
var NNI33555128 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555128.node = NNI33555128;
NTI33555128.base = NTI33555113;
var NNI671088644 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a0", len: 0, typ: NTI671088643, name: "a0", sons: null}, 
{kind: 1, offset: "a1", len: 0, typ: NTI671088643, name: "a1", sons: null}]};
NTI671088644.node = NNI671088644;
var NNI33555124 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555124.node = NNI33555124;
NTI33555124.base = NTI33555113;
var NNI1107296261 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554439, name: "name", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI33554439, name: "typ", sons: null}]};
NTI1107296261.node = NNI1107296261;
NTI486539502.base = NTI1107296261;
NTI1107296266.base = NTI33554439;
var NNI1107296263 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "version", len: 0, typ: NTI33554456, name: "version", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI1107296266, name: "children", sons: null}, 
{kind: 1, offset: "trackingId", len: 0, typ: NTI33554439, name: "trackingId", sons: null}]};
NTI1107296263.node = NNI1107296263;
var NNI1107296260 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "language", len: 0, typ: NTI33554439, name: "language", sons: null}, 
{kind: 1, offset: "module", len: 0, typ: NTI33554439, name: "module", sons: null}, 
{kind: 1, offset: "function", len: 0, typ: NTI33554439, name: "function", sons: null}]};
NTI1107296260.node = NNI1107296260;
NTI1107296264.base = NTI1107296261;
NTI1107296265.base = NTI33554439;
var NNI1107296262 = {kind: 2, len: 11, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "version", len: 0, typ: NTI33554456, name: "version", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI33554439, name: "parent", sons: null}, 
{kind: 1, offset: "tag", len: 0, typ: NTI1107296260, name: "tag", sons: null}, 
{kind: 1, offset: "arguments", len: 0, typ: NTI1107296264, name: "arguments", sons: null}, 
{kind: 1, offset: "genTmpl", len: 0, typ: NTI33554439, name: "genTmpl", sons: null}, 
{kind: 1, offset: "displayed", len: 0, typ: NTI33554439, name: "displayed", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554456, name: "head", sons: null}, 
{kind: 1, offset: "foot", len: 0, typ: NTI33554456, name: "foot", sons: null}, 
{kind: 1, offset: "maxNestedWallCount", len: 0, typ: NTI33554456, name: "maxNestedWallCount", sons: null}, 
{kind: 1, offset: "nestedWalls", len: 0, typ: NTI1107296265, name: "nestedWalls", sons: null}, 
{kind: 1, offset: "trackingId", len: 0, typ: NTI33554439, name: "trackingId", sons: null}]};
NTI1107296262.node = NNI1107296262;
NTI872415606.base = NTI33554439;

function toJSStr(s_33556807) {
                    var Temporary5;
            var Temporary7;

  var result_33556808 = null;

    var res_33556842 = newSeq_33556825((s_33556807).length);
    var i_33556843 = 0;
    var j_33556844 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_33556843 < (s_33556807).length)) break Label2;
          var c_33556845 = s_33556807[i_33556843];
          if ((c_33556845 < 128)) {
          res_33556842[j_33556844] = String.fromCharCode(c_33556845);
          i_33556843 += 1;
          }
          else {
            var helper_33556857 = newSeq_33556825(0);
            Label3: do {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556858 = c_33556845.toString(16);
                  if ((((code_33556858) == null ? 0 : (code_33556858).length) == 1)) {
                  helper_33556857.push("%0");;
                  }
                  else {
                  helper_33556857.push("%");;
                  }
                  
                  helper_33556857.push(code_33556858);;
                  i_33556843 += 1;
                    if (((s_33556807).length <= i_33556843)) Temporary5 = true; else {                      Temporary5 = (s_33556807[i_33556843] < 128);                    }                  if (Temporary5) {
                  break Label3;
                  }
                  
                  c_33556845 = s_33556807[i_33556843];
                }
            } while (false);
++excHandler;
            Temporary7 = framePtr;
            try {
            res_33556842[j_33556844] = decodeURIComponent(helper_33556857.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = Temporary7;
            res_33556842[j_33556844] = helper_33556857.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Temporary7;
            }
          }
          
          j_33556844 += 1;
        }
    } while (false);
    if (res_33556842.length < j_33556844) { for (var i = res_33556842.length ; i < j_33556844 ; ++i) res_33556842.push(null); }
               else { res_33556842.length = j_33556844; };
    result_33556808 = res_33556842.join("");

  return result_33556808;

}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}

function makeNimstrLit(c_33556801) {
      var result = [];
  for (var i = 0; i < c_33556801.length; ++i) {
    result[i] = c_33556801.charCodeAt(i);
  }
  return result;
  

  
}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557140, src_33557141, ti_33557142) {
  var result_33557151 = null;

    switch (ti_33557142.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557131(ti_33557142))) {
      result_33557151 = src_33557141;
      }
      else {
        result_33557151 = [src_33557141[0], src_33557141[1]];
      }
      
      break;
    case 19:
            if (dest_33557140 === null || dest_33557140 === undefined) {
        dest_33557140 = {};
      }
      else {
        for (var key in dest_33557140) { delete dest_33557140[key]; }
      }
      for (var key in src_33557141) { dest_33557140[key] = src_33557141[key]; }
      result_33557151 = dest_33557140;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557142.base == null))) {
      result_33557151 = nimCopy(dest_33557140, src_33557141, ti_33557142.base);
      }
      else {
      if ((ti_33557142.kind == 17)) {
      result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {m_type: ti_33557142} : dest_33557140;
      }
      else {
        result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {} : dest_33557140;
      }
      }
      nimCopyAux(result_33557151, src_33557141, ti_33557142.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557141 === null) {
        result_33557151 = null;
      }
      else {
        if (dest_33557140 === null || dest_33557140 === undefined || dest_33557140.length != src_33557141.length) {
          dest_33557140 = new Array(src_33557141.length);
        }
        result_33557151 = dest_33557140;
        for (var i = 0; i < src_33557141.length; ++i) {
          result_33557151[i] = nimCopy(result_33557151[i], src_33557141[i], ti_33557142.base);
        }
      }
    
      break;
    case 28:
            if (src_33557141 !== null) {
        result_33557151 = src_33557141.slice(0);
      }
    
      break;
    default: 
      result_33557151 = src_33557141;
      break;
    }

  return result_33557151;

}
                      var helper_671088694 = new Uint32Array([3198944359, 3630892171]);

function mnewString(len_33556893) {
        return new Array(len_33556893);
  

  
}

function raiseException(e_33556667, ename_33556668) {
    e_33556667.name = ename_33556668;
    if ((excHandler == 0)) {
    unhandledException(e_33556667);
    }
    
    throw e_33556667;

  
}

function addInt(a_33556940, b_33556941) {
        var result = a_33556940 + b_33556941;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557189, a_33557190, b_33557191) {
      var Temporary1;

  var result_33557192 = 0;

  BeforeRet: do {
      if (!(a_33557190 <= i_33557189)) Temporary1 = false; else {        Temporary1 = (i_33557189 <= b_33557191);      }    if (Temporary1) {
    result_33557192 = i_33557189;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_33557192;

}

function chckIndx(i_33557184, a_33557185, b_33557186) {
      var Temporary1;

  var result_33557187 = 0;

  BeforeRet: do {
      if (!(a_33557185 <= i_33557184)) Temporary1 = false; else {        Temporary1 = (i_33557184 <= b_33557186);      }    if (Temporary1) {
    result_33557187 = i_33557184;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557184, a_33557185, b_33557186);
    }
    
  } while (false);

  return result_33557187;

}

function addChar(x_33557255, c_33557256) {
    x_33557255.push(c_33557256);

  
}

function eqStrings(a_33556931, b_33556932) {
        if (a_33556931 == b_33556932) return true;
    if (a_33556931 === null && b_33556932.length == 0) return true;
    if (b_33556932 === null && a_33556931.length == 0) return true;
    if ((!a_33556931) || (!b_33556932)) return false;
    var alen = a_33556931.length;
    if (alen != b_33556932.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556931[i] != b_33556932[i]) return false;
    return true;
  

  
}

function nimMax(a_33556998, b_33556999) {
    var Temporary1;

  var result_33557000 = 0;

  BeforeRet: do {
    if ((b_33556999 <= a_33556998)) {
    Temporary1 = a_33556998;
    }
    else {
    Temporary1 = b_33556999;
    }
    
    result_33557000 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_33557000;

}

function subInt(a_33556944, b_33556945) {
        var result = a_33556944 - b_33556945;
    checkOverflowInt(result);
    return result;
  

  
}

function nimMin(a_33556994, b_33556995) {
    var Temporary1;

  var result_33556996 = 0;

  BeforeRet: do {
    if ((a_33556994 <= b_33556995)) {
    Temporary1 = a_33556994;
    }
    else {
    Temporary1 = b_33556995;
    }
    
    result_33556996 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_33556996;

}
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var state_671088653 = [{a0: 1773455756, a1: 4275166512}];
if (globalThis.utcInstance_855639434 === undefined) {
  globalThis.utcInstance_855639434 = [null];
}
if (globalThis.localInstance_855639435 === undefined) {
  globalThis.localInstance_855639435 = [null];
}
var bricks_486539270 = [[]];
var walls_486539271 = [[]];

function newSeq_33556825(len_33556827) {
  var result_33556828 = [];

    result_33556828 = new Array(len_33556827); for (var i = 0 ; i < len_33556827 ; ++i) { result_33556828[i] = null; }
  return result_33556828;

}

function isFatPointer_33557131(ti_33557132) {
  var result_33557133 = false;

  BeforeRet: do {
    result_33557133 = !((ConstSet1[ti_33557132.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557133;

}

function nimCopyAux(dest_33557144, src_33557145, n_33557146) {
    switch (n_33557146.kind) {
    case 0:
      break;
    case 1:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557146.sons.length; i++) {
      nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i]);
    }
    
      break;
    case 3:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
      for (var i = 0; i < n_33557146.sons.length; ++i) {
        nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i][1]);
      }
    
      break;
    }

  
}

function toFloat_33556001(i_33556002) {
  var result_33556003 = 0.0;

    result_33556003 = i_33556002;

  return result_33556003;

}

function HEX2F_33557575(x_33557576, y_33557577) {
  var result_33557578 = 0.0;

    result_33557578 = (toFloat_33556001(x_33557576) / toFloat_33556001(y_33557577));

  return result_33557578;

}

function epochTime_855641416() {
  var result_855641417 = 0.0;

    result_855641417 = HEX2F_33557575(new Date().getTime(), 1000);

  return result_855641417;

}

function add_33556419(x_33556420, x_33556420_Idx, y_33556421) {
          if (x_33556420[x_33556420_Idx] === null) { x_33556420[x_33556420_Idx] = []; }
      var off = x_33556420[x_33556420_Idx].length;
      x_33556420[x_33556420_Idx].length += y_33556421.length;
      for (var i = 0; i < y_33556421.length; ++i) {
        x_33556420[x_33556420_Idx][off+i] = y_33556421.charCodeAt(i);
      }
    

  
}

function unhandledException(e_33556663) {
    var buf_33556664 = [[]];
    if (!(((e_33556663.message).length == 0))) {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_33556664[0].push.apply(buf_33556664[0], e_33556663.message);;
    }
    else {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit(" ["));;
    add_33556419(buf_33556664, 0, e_33556663.name);
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("]\x0A"));;
    var cbuf_33556665 = toJSStr(buf_33556664[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556665);
  }
  else {
    throw cbuf_33556665;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI33555122, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556938) {
        if (a_33556938 > 2147483647 || a_33556938 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI33555130, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_251658415(result_251658417, result_251658417_Idx, x_251658418, start_251658419, n_251658420) {
    var old_251658421 = (result_251658417[result_251658417_Idx]).length;
    (result_251658417[result_251658417_Idx].length = chckRange(addInt(old_251658421, n_251658420), 0, 2147483647));
    Label1: do {
      var iHEX60gensym4_251658435 = 0;
      var i_486539709 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539709 < n_251658420)) break Label3;
            iHEX60gensym4_251658435 = i_486539709;
            result_251658417[result_251658417_Idx][chckIndx(addInt(old_251658421, iHEX60gensym4_251658435), 0, (result_251658417[result_251658417_Idx]).length - 1)] = x_251658418.charCodeAt(chckIndx(addInt(start_251658419, iHEX60gensym4_251658435), 0, (x_251658418).length - 1));
            i_486539709 = addInt(i_486539709, 1);
          }
      } while (false);
    } while (false);

  
}

function addChars_251658411(result_251658413, result_251658413_Idx, x_251658414) {
    addChars_251658415(result_251658413, result_251658413_Idx, x_251658414, 0, ((x_251658414) == null ? 0 : (x_251658414).length));

  
}

function addInt_251658436(result_251658437, result_251658437_Idx, x_251658438) {
    addChars_251658411(result_251658437, result_251658437_Idx, ((x_251658438) + ""));

  
}

function addInt_251658457(result_251658458, result_251658458_Idx, x_251658459) {
    addInt_251658436(result_251658458, result_251658458_Idx, x_251658459);

  
}

function HEX24_335544323(x_335544324) {
  var result_335544325 = [[]];

    addInt_251658457(result_335544325, 0, x_335544324);

  return result_335544325[0];

}

function raiseIndexError(i_33556754, a_33556755, b_33556756) {
    var Temporary1;

    if ((b_33556756 < a_33556755)) {
    Temporary1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Temporary1 = (makeNimstrLit("index ") || []).concat(HEX24_335544323(i_33556754) || [],makeNimstrLit(" not in ") || [],HEX24_335544323(a_33556755) || [],makeNimstrLit(" .. ") || [],HEX24_335544323(b_33556756) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554439), parent: null, m_type: NTI33555128, name: null, trace: [], up: null}, "IndexDefect");

  
}

function rotl_671088671(x_671088672, k_671088673) {
  var result_671088674 = 0;

    result_671088674 = ((x_671088672 << k_671088673) | (x_671088672 >>> ((64 - k_671088673) >>> 0)));

  return result_671088674;

}

function next_671088683(r_671088684) {
  var result_671088685 = 0;

    var s0_671088686 = r_671088684.a0;
    var s1_671088687 = r_671088684.a1;
    result_671088685 = ((s0_671088686 + s1_671088687) >>> 0);
    s1_671088687 = (s1_671088687 ^ s0_671088686);
    r_671088684.a0 = ((rotl_671088671(s0_671088686, 55) ^ s1_671088687) ^ (s1_671088687 << 14));
    r_671088684.a1 = rotl_671088671(s1_671088687, 36);

  return result_671088685;

}

function skipRandomNumbers_671088692(s_671088693) {
    var s0_671088695 = 0;
    var s1_671088696 = 0;
    Label1: do {
      var i_671088705 = 0;
      var res_486539703 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_486539703 <= 1)) break Label3;
            i_671088705 = res_486539703;
            Label4: do {
              var b_671088710 = 0;
              var i_486539701 = 0;
              Label5: do {
                  Label6: while (true) {
                  if (!(i_486539701 < 64)) break Label6;
                    b_671088710 = i_486539701;
                    if (!(((helper_671088694[chckIndx(i_671088705, 0, (helper_671088694).length - 1)] & (1 << b_671088710)) == 0))) {
                    s0_671088695 = (s0_671088695 ^ s_671088693.a0);
                    s1_671088696 = (s1_671088696 ^ s_671088693.a1);
                    }
                    
                    var _ = next_671088683(s_671088693);
                    i_486539701 = addInt(i_486539701, 1);
                  }
              } while (false);
            } while (false);
            res_486539703 = addInt(res_486539703, 1);
          }
      } while (false);
    } while (false);
    s_671088693.a0 = s0_671088695;
    s_671088693.a1 = s1_671088696;

  
}

function initRand_671088859(seed_671088860) {
    var Temporary1;

  var result_671088861 = [({a0: 0, a1: 0})];

    if (!((seed_671088860 == 0))) {
    Temporary1 = seed_671088860;
    }
    else {
    Temporary1 = 2147483647;
    }
    
    var seed_671088867 = Temporary1;
    result_671088861[0].a0 = Math.floor(seed_671088867 / Math.pow(2, 16));
    result_671088861[0].a1 = (seed_671088867 & 65535);
    skipRandomNumbers_671088692(result_671088861[0]);
    var _ = next_671088683(result_671088861[0]);

  return result_671088861[0];

}

function initRand_671088884() {
  var result_671088885 = ({a0: 0, a1: 0});

    var time_671088886 = ((epochTime_855641416() * 1000.0) & 2147483647);
    result_671088885 = nimCopy(result_671088885, initRand_671088859(time_671088886), NTI671088644);

  return result_671088885;

}

function randomize_671088891() {
    state_671088653[0] = nimCopy(state_671088653[0], initRand_671088884(), NTI671088644);

  
}

function rand_671088744(r_671088746, max_671088747) {
  var result_671088748 = 0;

  BeforeRet: do {
    if ((max_671088747 == 0)) {
    break BeforeRet;
    }
    else {
      var max_671088749 = max_671088747;
      if ((max_671088749 == -1)) {
      result_671088748 = next_671088683(r_671088746);
      break BeforeRet;
      }
      
      Label1: do {
          Label2: while (true) {
          if (!true) break Label2;
            var x_671088762 = next_671088683(r_671088746);
            if ((x_671088762 <= ((4294967295 - (4294967295 % max_671088749)) ))) {
            result_671088748 = (x_671088762 % ((max_671088749 + 1) ));
            break BeforeRet;
            }
            
          }
      } while (false);
    }
    
  } while (false);

  return result_671088748;

}

function rand_671088740(r_671088741, max_671088742) {
  var result_671088743 = 0;

    result_671088743 = rand_671088744(r_671088741, max_671088742);

  return result_671088743;

}

function rand_671088763(max_671088764) {
  var result_671088765 = 0;

    result_671088765 = rand_671088740(state_671088653[0], chckRange(max_671088764, 0, 2147483647));

  return result_671088765;

}

function sysFatal_218103842(message_218103845) {
    raiseException({message: nimCopy(null, message_218103845, NTI33554439), m_type: NTI33555124, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_218103840(msg_218103841) {
    sysFatal_218103842(msg_218103841);

  
}

function failedAssertImpl_218103864(msg_218103865) {
    raiseAssert_218103840(msg_218103865);

  
}

function new_486539431(length_486539434) {
                    var Temporary9;
                    var Temporary13;

  var result_486539435 = [];

  BeforeRet: do {
    var dupl_486539436 = true;
    var res_486539437 = [];
    Label1: do {
        Label2: while (true) {
        if (!dupl_486539436) break Label2;
          dupl_486539436 = false;
          res_486539437 = nimCopy(null, [], NTI33554439);
          randomize_671088891();
          Label3: do {
            var i_486539442 = 0;
            var res_486539687 = 1;
            Label4: do {
                Label5: while (true) {
                if (!(res_486539687 <= 5)) break Label5;
                  i_486539442 = res_486539687;
                  addChar(res_486539437, makeNimstrLit("abcdefghijklmnopqrstuvwxyz")[chckIndx(rand_671088763(25), 0, (makeNimstrLit("abcdefghijklmnopqrstuvwxyz")).length - 1)]);;
                  res_486539687 = addInt(res_486539687, 1);
                }
            } while (false);
          } while (false);
          Label6: do {
            var brick_486539446 = ({version: 0, parent: [], tag: ({language: [], module: [], function: []}), arguments: [], genTmpl: [], displayed: [], head: 0, foot: 0, maxNestedWallCount: 0, nestedWalls: [], trackingId: []});
            var i_486539691 = 0;
            var L_486539692 = (bricks_486539270[0]).length;
            Label7: do {
                Label8: while (true) {
                if (!(i_486539691 < L_486539692)) break Label8;
                  brick_486539446 = bricks_486539270[0][chckIndx(i_486539691, 0, (bricks_486539270[0]).length - 1)];
                    if (eqStrings(brick_486539446.trackingId, res_486539437)) Temporary9 = true; else {                      Temporary9 = dupl_486539436;                    }                  if (Temporary9) {
                  dupl_486539436 = true;
                  break Label6;
                  }
                  
                  i_486539691 = addInt(i_486539691, 1);
                  if (!(((bricks_486539270[0]).length == L_486539692))) {
                  failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                  }
                  
                }
            } while (false);
          } while (false);
          Label10: do {
            var wall_486539450 = ({version: 0, children: [], trackingId: []});
            var i_486539696 = 0;
            var L_486539697 = (walls_486539271[0]).length;
            Label11: do {
                Label12: while (true) {
                if (!(i_486539696 < L_486539697)) break Label12;
                  wall_486539450 = walls_486539271[0][chckIndx(i_486539696, 0, (walls_486539271[0]).length - 1)];
                    if (eqStrings(wall_486539450.trackingId, res_486539437)) Temporary13 = true; else {                      Temporary13 = dupl_486539436;                    }                  if (Temporary13) {
                  dupl_486539436 = true;
                  break Label10;
                  }
                  
                  i_486539696 = addInt(i_486539696, 1);
                  if (!(((walls_486539271[0]).length == L_486539697))) {
                  failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                  }
                  
                }
            } while (false);
          } while (false);
        }
    } while (false);
    result_486539435 = nimCopy(null, res_486539437, NTI33554439);
    break BeforeRet;
  } while (false);

  return result_486539435;

}

function newSeq_486539578(len_486539580) {
  var result_486539581 = [];

    result_486539581 = new Array(len_486539580); for (var i = 0 ; i < len_486539580 ; ++i) { result_486539581[i] = ({name: [], typ: []}); }
  return result_486539581;

}

function elem_1107296337(wall_1107296338) {
  var result_1107296339 = null;

    result_1107296339 = document.getElementById(toJSStr(wall_1107296338.trackingId));
    if ((result_1107296339 == null)) {
    result_1107296339 = document.createElement("div");
    result_1107296339.id = toJSStr(wall_1107296338.trackingId);
    result_1107296339.setAttribute("draggable", "true");
    document.getElementById("bricklayer").appendChild(result_1107296339);
    result_1107296339.classList.add("wall");
    }
    

  return result_1107296339;

}

function substrEq_872415461(s_872415462, pos_872415463, substr_872415464) {
  var result_872415465 = false;

  BeforeRet: do {
    var i_872415466 = 0;
    var length_872415467 = (substr_872415464).length;
    Label1: do {
        Label2: while (true) {
        if (!(((i_872415466 < length_872415467) && (addInt(pos_872415463, i_872415466) < (s_872415462).length)) && (s_872415462[chckIndx(addInt(pos_872415463, i_872415466), 0, (s_872415462).length - 1)] == substr_872415464[chckIndx(i_872415466, 0, (substr_872415464).length - 1)]))) break Label2;
          i_872415466 = addInt(i_872415466, 1);
        }
    } while (false);
    result_872415465 = (i_872415466 == length_872415467);
    break BeforeRet;
  } while (false);

  return result_872415465;

}

function substr_33557906(s_33557907, first_33557908, last_33557909) {
  var result_33557910 = [];

    var first_33557911 = nimMax(first_33557908, 0);
    var L_33557912 = nimMax(addInt(subInt(nimMin(last_33557909, (s_33557907).length - 1), first_33557911), 1), 0);
    result_33557910 = nimCopy(null, mnewString(chckRange(L_33557912, 0, 2147483647)), NTI33554439);
    Label1: do {
      var i_33557917 = 0;
      var colontmp__486539722 = 0;
      colontmp__486539722 = subInt(L_33557912, 1);
      var res_486539723 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_486539723 <= colontmp__486539722)) break Label3;
            i_33557917 = res_486539723;
            result_33557910[chckIndx(i_33557917, 0, (result_33557910).length - 1)] = s_33557907[chckIndx(addInt(i_33557917, first_33557911), 0, (s_33557907).length - 1)];
            res_486539723 = addInt(res_486539723, 1);
          }
      } while (false);
    } while (false);

  return result_33557910;

}

function nsuStartsWith(s_872416545, prefix_872416546) {
            var Temporary3;

  var result_872416547 = false;

  BeforeRet: do {
    var prefixLenHEX60gensym141_872416552 = (prefix_872416546).length;
    var sLenHEX60gensym141_872416553 = (s_872416545).length;
    var iHEX60gensym141_872416554 = 0;
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym141_872416552 <= iHEX60gensym141_872416554)) {
          result_872416547 = true;
          break BeforeRet;
          }
          
            if ((sLenHEX60gensym141_872416553 <= iHEX60gensym141_872416554)) Temporary3 = true; else {              Temporary3 = !((s_872416545[chckIndx(iHEX60gensym141_872416554, 0, (s_872416545).length - 1)] == prefix_872416546[chckIndx(iHEX60gensym141_872416554, 0, (prefix_872416546).length - 1)]));            }          if (Temporary3) {
          result_872416547 = false;
          break BeforeRet;
          }
          
          iHEX60gensym141_872416554 = addInt(iHEX60gensym141_872416554, 1);
        }
    } while (false);
  } while (false);

  return result_872416547;

}

function nsuEndsWith(s_872416564, suffix_872416565) {
          var Temporary3;

  var result_872416566 = false;

  BeforeRet: do {
    var suffixLenHEX60gensym148_872416572 = (suffix_872416565).length;
    var sLenHEX60gensym148_872416573 = (s_872416564).length;
    var iHEX60gensym148_872416574 = 0;
    var jHEX60gensym148_872416575 = subInt(sLenHEX60gensym148_872416573, suffixLenHEX60gensym148_872416572);
    Label1: do {
        Label2: while (true) {
          if (!(0 <= addInt(iHEX60gensym148_872416574, jHEX60gensym148_872416575))) Temporary3 = false; else {            Temporary3 = (addInt(iHEX60gensym148_872416574, jHEX60gensym148_872416575) < sLenHEX60gensym148_872416573);          }        if (!Temporary3) break Label2;
          if (!((s_872416564[chckIndx(addInt(iHEX60gensym148_872416574, jHEX60gensym148_872416575), 0, (s_872416564).length - 1)] == suffix_872416565[chckIndx(iHEX60gensym148_872416574, 0, (suffix_872416565).length - 1)]))) {
          result_872416566 = false;
          break BeforeRet;
          }
          
          iHEX60gensym148_872416574 = addInt(iHEX60gensym148_872416574, 1);
        }
    } while (false);
    if ((suffixLenHEX60gensym148_872416572 <= iHEX60gensym148_872416574)) {
    result_872416566 = true;
    break BeforeRet;
    }
    
  } while (false);

  return result_872416566;

}

function elem_1107296310(brick_1107296311) {
  var result_1107296312 = null;

    result_1107296312 = document.getElementById(toJSStr(brick_1107296311.trackingId));
    if ((result_1107296312 == null)) {
    result_1107296312 = document.createElement("div");
    result_1107296312.id = toJSStr(brick_1107296311.trackingId);
    result_1107296312.classList.add("brick");
    result_1107296312.classList.add("laidbrick");
    Label1: do {
      var str_1107296317 = [];
      var lastHEX60gensym41_486539715 = 0;
      var splitsHEX60gensym41_486539716 = -1;
      Label2: do {
          Label3: while (true) {
          if (!(lastHEX60gensym41_486539715 <= (brick_1107296311.displayed).length)) break Label3;
            var firstHEX60gensym41_486539718 = lastHEX60gensym41_486539715;
            Label4: do {
                Label5: while (true) {
                if (!((lastHEX60gensym41_486539715 < (brick_1107296311.displayed).length) && !(substrEq_872415461(brick_1107296311.displayed, lastHEX60gensym41_486539715, makeNimstrLit(" "))))) break Label5;
                  lastHEX60gensym41_486539715 = addInt(lastHEX60gensym41_486539715, 1);
                }
            } while (false);
            if ((splitsHEX60gensym41_486539716 == 0)) {
            lastHEX60gensym41_486539715 = (brick_1107296311.displayed).length;
            }
            
            str_1107296317 = substr_33557906(brick_1107296311.displayed, firstHEX60gensym41_486539718, subInt(lastHEX60gensym41_486539715, 1));
            if ((nsuStartsWith(str_1107296317, makeNimstrLit("<")) && nsuEndsWith(str_1107296317, makeNimstrLit(">")))) {
            var displayed_1107296318 = document.createElement("div");
            displayed_1107296318.classList.add("variable");
            result_1107296312.appendChild(displayed_1107296318);
            }
            else {
            result_1107296312.appendChild(document.createTextNode(toJSStr(str_1107296317)));
            }
            
            if ((splitsHEX60gensym41_486539716 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym41_486539716 = subInt(splitsHEX60gensym41_486539716, 1);
            lastHEX60gensym41_486539715 = addInt(lastHEX60gensym41_486539715, 1);
          }
      } while (false);
    } while (false);
    }
    

  return result_1107296312;

}

function create_486539421(tag_486539424, arguments_486539425, genTmpl_486539426, displayAs_486539427, head_486539428, foot_486539429, maxNestedWallCount_486539430) {
    var wall_486539451 = {version: 1, trackingId: new_486539431(5), children: []};
    Label1: do {
      var iHEX60gensym12_486539574 = 0;
      var resultHEX60gensym12_486539586 = newSeq_486539578(chckRange((arguments_486539425).length, 0, 2147483647));
      Label2: do {
        var itHEX60gensym12_486539590 = ({name: [], typ: []});
        var i_486539683 = 0;
        Label3: do {
            Label4: while (true) {
            if (!(i_486539683 < (arguments_486539425).length)) break Label4;
              itHEX60gensym12_486539590 = arguments_486539425[chckIndx(i_486539683, 0, (arguments_486539425).length - 1)];
              resultHEX60gensym12_486539586[chckIndx(iHEX60gensym12_486539574, 0, (resultHEX60gensym12_486539586).length - 1)] = nimCopy(resultHEX60gensym12_486539586[chckIndx(iHEX60gensym12_486539574, 0, (resultHEX60gensym12_486539586).length - 1)], itHEX60gensym12_486539590, NTI1107296261);
              iHEX60gensym12_486539574 = addInt(iHEX60gensym12_486539574, 1);
              i_486539683 = addInt(i_486539683, 1);
            }
        } while (false);
      } while (false);
    } while (false);
    var brick_486539599 = {version: 1, trackingId: new_486539431(5), arguments: nimCopy(null, resultHEX60gensym12_486539586, NTI486539502), genTmpl: nimCopy(null, genTmpl_486539426, NTI33554439), displayed: nimCopy(null, displayAs_486539427, NTI33554439), parent: [], tag: ({language: [], module: [], function: []}), head: 0, foot: 0, maxNestedWallCount: 0, nestedWalls: []};
    var Temporary5 = nimCopy(null, brick_486539599.trackingId, NTI33554439);
    wall_486539451.children.push(Temporary5);;
    brick_486539599.parent = nimCopy(null, wall_486539451.trackingId, NTI33554439);
    var Temporary6 = nimCopy(null, wall_486539451, NTI1107296263);
    walls_486539271[0].push(Temporary6);;
    var Temporary7 = nimCopy(null, brick_486539599, NTI1107296262);
    bricks_486539270[0].push(Temporary7);;
    document.getElementById("bricklayer").appendChild(elem_1107296337(wall_486539451));
    elem_1107296337(wall_486539451).appendChild(elem_1107296310(brick_486539599));

  
}

function nsuSplitString(s_872415753, sep_872415754, maxsplit_872415755) {
  var result_872415756 = [];

    if (!((0 < (sep_872415754).length))) {
    failedAssertImpl_218103864(makeNimstrLit("strutils.nim(739, 11) `sep.len > 0` "));
    }
    
    result_872415756 = nimCopy(null, [], NTI872415606);
    Label1: do {
      var xHEX60gensym72_872415767 = [];
      var lastHEX60gensym41_486539728 = 0;
      var splitsHEX60gensym41_486539729 = maxsplit_872415755;
      Label2: do {
          Label3: while (true) {
          if (!(lastHEX60gensym41_486539728 <= (s_872415753).length)) break Label3;
            var firstHEX60gensym41_486539731 = lastHEX60gensym41_486539728;
            Label4: do {
                Label5: while (true) {
                if (!((lastHEX60gensym41_486539728 < (s_872415753).length) && !(substrEq_872415461(s_872415753, lastHEX60gensym41_486539728, sep_872415754)))) break Label5;
                  lastHEX60gensym41_486539728 = addInt(lastHEX60gensym41_486539728, 1);
                }
            } while (false);
            if ((splitsHEX60gensym41_486539729 == 0)) {
            lastHEX60gensym41_486539728 = (s_872415753).length;
            }
            
            xHEX60gensym72_872415767 = substr_33557906(s_872415753, firstHEX60gensym41_486539731, subInt(lastHEX60gensym41_486539728, 1));
            var Temporary6 = nimCopy(null, xHEX60gensym72_872415767, NTI33554439);
            result_872415756.push(Temporary6);;
            if ((splitsHEX60gensym41_486539729 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym41_486539729 = subInt(splitsHEX60gensym41_486539729, 1);
            lastHEX60gensym41_486539728 = addInt(lastHEX60gensym41_486539728, (sep_872415754).length);
          }
      } while (false);
    } while (false);

  return result_872415756;

}

function t_1107296302(tagStr_1107296303) {
  var result_1107296304 = ({language: [], module: [], function: []});

    var splitTag_1107296305 = nsuSplitString(tagStr_1107296303, makeNimstrLit("::"), -1);
    if (!(((splitTag_1107296305).length == 3))) {
    raiseException({message: makeNimstrLit("Can only accept 2 instances of `::`!"), parent: null, m_type: NTI33555128, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    result_1107296304.language = nimCopy(null, splitTag_1107296305[chckIndx(0, 0, (splitTag_1107296305).length - 1)], NTI33554439);
    result_1107296304.module = nimCopy(null, splitTag_1107296305[chckIndx(1, 0, (splitTag_1107296305).length - 1)], NTI33554439);
    result_1107296304.function = nimCopy(null, splitTag_1107296305[chckIndx(2, 0, (splitTag_1107296305).length - 1)], NTI33554439);

  return result_1107296304;

}

function load() {
    
function HEX3Aanonymous_486539404(e_486539405) {
        rawEcho(makeNimstrLit("Drag Start!"));

      
    }
    
function HEX3Aanonymous_486539409(e_486539410) {
        rawEcho(makeNimstrLit("Drag End!"));

      
    }
    
function HEX3Aanonymous_486539414(e_486539415) {
        var event_486539416 = e_486539415;
        if ((event_486539416.key == "q")) {
        rawEcho(makeNimstrLit("Created block!"));
        create_486539421(t_1107296302(makeNimstrLit("python::builtins::print")), [{name: makeNimstrLit("message"), typ: makeNimstrLit("string")}], makeNimstrLit("print(<message>)"), makeNimstrLit("print <message>"), 0, 0, 0);
        }
        

      
    }

    document.body.addEventListener("dragstart", HEX3Aanonymous_486539404, false);
    document.body.addEventListener("dragend", HEX3Aanonymous_486539409, false);
    document.body.addEventListener("keydown", HEX3Aanonymous_486539414, false);

  
}
